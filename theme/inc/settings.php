<?php
/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class BcThemeSettings {
	private $bctheme_settings_options;

	public function __construct() {}

	public function init_admin(){
		add_action( 'admin_menu', array( $this, 'bctheme_settings_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'bctheme_settings_page_init' ) );
		add_action('admin_footer-bweb-component_page_theme', array( $this, 'admin_js_theme' ));
		add_action( 'admin_enqueue_scripts', array( $this, '_limit_depth' ));
	}

	public function bctheme_settings_add_plugin_page() {
		add_submenu_page(
            'bweb-component',
			'Impostazioni Tema', // page_title
			'Impostazioni Tema', // menu_title
			'manage_options', // capability
			'theme', // menu_slug
			array( $this, 'bctheme_settings_create_admin_page' ) // function
		);

	}

	public function bctheme_settings_create_admin_page() {
		$this->bctheme_settings_options = get_option( 'bctheme_settings_option' ); ?>

		<div class="wrap">
			<h2 class="wp-heading-inline">Impostazioni Tema</h2>
			<p></p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
				settings_fields( 'bctheme_settings_option_group' );
				?>
					<div class="bc-theme-bar" style="display: block;background-color: #fff; border-left: 1px solid #ccc; border-right: 1px solid #ccc; border-top: 1px solid #ccc">
						<a href="#" class="bc-theme-bar-item" attr_theme_bar=".theme_generic" style="float: left; color: #444;padding: 10px 30px;font-size: 15px;text-decoration: none; box-shadow: none; ">Generic</a>
						<a href="#" class="bc-theme-bar-item" attr_theme_bar=".theme_dev" style="float: left; color: #444;padding: 10px 30px;font-size: 15px;text-decoration: none;background-color: #eee;box-shadow: none;">Dev</a>
					</div>
					<div class="bar_cont theme_generic" style="padding:10px;background-color: #fff; border-left: 1px solid #ccc; border-right: 1px solid #ccc; border-bottom: 1px solid #ccc">
						<?php
						do_settings_sections( 'bctheme-settings-generic' );
						?>
					</div>
					<div class="bar_cont theme_dev" style="display:none;padding:10px;background-color: #fff; border-left: 1px solid #ccc; border-right: 1px solid #ccc; border-bottom: 1px solid #ccc">
						<?php
						do_settings_sections( 'bctheme-settings-dev' );
						?>
					</div>
					<?php
					submit_button();
				?>
				
			</form>
		</div>
	<?php }

	public function bctheme_settings_page_init() {
		register_setting(
			'bctheme_settings_option_group', // option_group
			'bctheme_settings_option', // option_name
			array( $this, 'bctheme_settings_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'bctheme_settings_generic_section', // id
			'', // title
			array( $this, 'bctheme_settings_section_info' ), // callback
			'bctheme-settings-generic' // page
		);
		
		add_settings_section(
			'bctheme_settings_dev_section', // id
			'', // title
			array( $this, 'bctheme_settings_section_info' ), // callback
			'bctheme-settings-dev' // page
		);

		add_settings_field(
			'nome', // id
			'Nome Tema', // title
			array( $this, 'nome_callback' ), // callback
			'bctheme-settings-generic', // page
			'bctheme_settings_generic_section' // section
		);

		add_settings_field(
			'include_file_woocommerce', // id
			'Template woocommerce', // title
			array( $this, 'include_file_woocommerce_callback' ), // callback
			'bctheme-settings-generic', // page
			'bctheme_settings_generic_section' // section
		);

		add_settings_field(
			'include_home_template', // id
			'HomePage template', // title
			array( $this, 'include_home_template_callback' ), // callback
			'bctheme-settings-generic', // page
			'bctheme_settings_generic_section' // section
		);

		
		add_settings_field(
			'page_home_template', // id
			'Pagina Home', // title
			array( $this, 'page_home_template_callback' ), // callback
			'bctheme-settings-generic', // page
			'bctheme_settings_generic_section' // section
		);

		add_settings_field(
			'include_file_template', // id
			'File template', // title
			array( $this, 'include_file_template_callback' ), // callback
			'bctheme-settings-generic', // page
			'bctheme_settings_generic_section' // section
		);

		add_settings_field(
			'gen_html', // id
			'Genera file html', // title
			array( $this, 'gen_html_callback' ), // callback
			'bctheme-settings-dev', // page
			'bctheme_settings_dev_section' // section
		);
		
	}

	public function sanitize_theme_title($string){
		return str_replace('-', '_',sanitize_title($string));
	}

	public function bctheme_settings_sanitize($input) {
		$sanitary_values = array();
        $folder_theme = "";
		if ( isset( $input['nome'] ) ) {
            if ( !empty( $input['nome'] ) ){
				$sanitary_values['nome'] = sanitize_text_field( $input['nome'] );
				$slug_name = $this->sanitize_theme_title( $sanitary_values['nome'] );
				$folder_theme = WP_CONTENT_DIR  . '/themes/' . $slug_name;

				if (!is_dir($folder_theme)){
					$return_copy = $this->copyfolder(PLUGIN_THEME_DIR  . 'file_theme/static', $folder_theme);

					if($return_copy){

						$strStyle=file_get_contents($folder_theme . '/style.css');
						$strStyle=str_replace('!######!', $sanitary_values['nome'],$strStyle);
						file_put_contents($folder_theme . '/style.css', $strStyle);

						$strFunctions=file_get_contents($folder_theme . '/functions.php');
						$strFunctions=str_replace('!######!', $slug_name,$strFunctions);
						file_put_contents($folder_theme . '/functions.php', $strFunctions);

						$name_th = $slug_name;

						update_option( 'template', $name_th );
						update_option( 'stylesheet', $name_th );
					}
				}

				

				/****************** FILE WOOCOMMERCE*/

				if ( isset( $input['include_file_woocommerce'] ) ) {
					$sanitary_values['include_file_woocommerce'] = $input['include_file_woocommerce'];
					if($sanitary_values['include_file_woocommerce'] === 'include_file_woocommerce'){
						if (!is_dir($folder_theme . '/woocommerce')){
							$this->copyfolder(PLUGIN_THEME_DIR  . 'file_theme/dynamic/woocommerce', $folder_theme . '/woocommerce');
						}
					}else{
						if (is_dir($folder_theme . '/woocommerce')){
							$this->deleteAll($folder_theme . '/woocommerce');
						}
					}
				}else{
					$this->deleteAll($folder_theme . '/woocommerce');
				}

				/****************** FILE TEMPLATE*/

				if ( isset( $input['include_file_template']['generic'] ) ) {
					//$sanitary_values['include_file_template'] = $input['include_file_template'];
					//$this->check_template('archive.php')
					//$this->copyfile(PLUGIN_THEME_DIR  . 'file_theme/dynamic/archive.php', $folder_theme . '/template_homepage.php');
					
					if(is_array($input['include_file_template']['generic'])) {
						foreach($input['include_file_template']['generic'] as $file ){
							if(!$this->check_template($file)){
								$this->copyfile(PLUGIN_THEME_DIR  . 'file_theme/dynamic/'.$file, $folder_theme . '/'.$file);
							}
						}
					}
				}
				if ( isset( $input['include_file_template']['cpt'] ) ) {
					//$sanitary_values['include_file_template'] = $input['include_file_template'];
					//$this->check_template('archive.php')
					//$this->copyfile(PLUGIN_THEME_DIR  . 'file_theme/dynamic/archive.php', $folder_theme . '/template_homepage.php');
					
					if(is_array($input['include_file_template']['cpt'])) {
						foreach($input['include_file_template']['cpt'] as $file ){
							if(!$this->check_template($file)){
								$sourcT = explode("-",$file)[0];
								$this->copyfile(PLUGIN_THEME_DIR  . 'file_theme/dynamic/'.$sourcT.'.php', $folder_theme . '/'.$file);
							}
						}
					}
				}

				/***************** TEMPLATE HOMEPAGE*/

				$r_templ_home = false;
				if ( isset( $input['include_home_template'] ) ) {
					$sanitary_values['include_home_template'] = $input['include_home_template'];
					if($input['include_home_template'] === 'include_home_template'){
						if (!file_exists($folder_theme . '/template_homepage.php')){
							$this->copyfile(PLUGIN_THEME_DIR  . 'file_theme/dynamic/template_homepage.php', $folder_theme . '/template_homepage.php');
							$r_templ_home = true;
						}
					}else{
						if (file_exists($folder_theme . '/template_homepage.php')){
							if(get_option('page_on_front')>0){
								update_post_meta( get_option('page_on_front'), '_wp_page_template', '' );
							}
							$this->deletefile($folder_theme . '/template_homepage.php');
						}
					}
				}else{
					if(get_option('page_on_front')>0){
						update_post_meta( get_option('page_on_front'), '_wp_page_template', '' );
					}
					$this->deletefile($folder_theme . '/template_homepage.php');
				}

				/****************** */
				
				if ( isset( $input['creapagina'] ) && isset($input['page_on_front']) ) {
					if (!empty($input['creapagina'])){
						$wordpress_page = array(
							'post_title'    => $input['creapagina'],
							'post_content'  => '',
							'post_status'   => 'publish',
							'post_author'   => get_current_user_id(),
							'post_type' => 'page'
							);
						if($r_templ_home) $wordpress_page['page_template'] = 'template_homepage.php';
						$idp =wp_insert_post( $wordpress_page );
						update_option('show_on_front', 'page');
						update_option('page_on_front', $idp);
				}else{
						if($input['page_on_front']>0){
							update_option('show_on_front', 'page');
							update_option('page_on_front', $input['page_on_front']);
							update_post_meta( $input['page_on_front'], '_wp_page_template', 'template_homepage.php' );
						}
					}
				}
			}else{
				add_settings_error(
					'bctheme_settings',
					esc_attr( 'bctheme_settings' ),
					'Nome tema richiesto!',
					'error'
				);
			}
		}


		if ( isset( $_REQUEST['gen_html'] ) && $_REQUEST['gen_html'] == 'true' ) {
			if($folder_theme!=''){
				require "generate_html.php";
			}
		}



		return $sanitary_values;
	}

	public function bctheme_settings_section_info() {
		
	}

	public function nome_callback() {
		printf(
			'<input class="regular-text" type="text" name="bctheme_settings_option[nome]" id="nome" value="%s">',
			isset( $this->bctheme_settings_options['nome'] ) ? esc_attr( $this->bctheme_settings_options['nome']) : ''
		);
	}

	public function include_file_woocommerce_callback() {
		printf(
			'<input type="checkbox" name="bctheme_settings_option[include_file_woocommerce]" id="include_file_woocommerce" value="include_file_woocommerce" %s>',
			( isset( $this->bctheme_settings_options['include_file_woocommerce'] ) && $this->bctheme_settings_options['include_file_woocommerce'] === 'include_file_woocommerce' ) ? 'checked' : ''
		);
	}

	public function include_home_template_callback() {
		printf(
			'<input type="checkbox" name="bctheme_settings_option[include_home_template]" id="include_home_template" value="include_home_template" %s>',
			( isset( $this->bctheme_settings_options['include_home_template'] ) && $this->bctheme_settings_options['include_home_template'] === 'include_home_template' ) ? 'checked' : ''
		);
	}

	public function page_home_template_callback() {

		wp_dropdown_pages( array(
            'name'              => 'bctheme_settings_option[page_on_front]',
            'show_option_none'  => '&mdash; Seleziona &mdash;',
            'option_none_value' => '0',
            'selected'          => get_option('page_on_front'),
        ) );
		?>
		<br>o crea una nuova pagina per l'homepage:<br>
		<input class="regular-text" type="text" name="bctheme_settings_option[creapagina]" id="creapagina">
		<?php
	}

	public function include_file_template_callback() {
		echo '<hr>';
		/*printf(
			'<input type="checkbox" name="bctheme_settings_option[include_file_template]" id="include_file_template" value="include_file_template" %s>',
			( isset( $this->bctheme_settings_options['include_file_template'] ) && $this->bctheme_settings_options['include_file_template'] === 'include_file_template' ) ? 'checked' : ''
		);*/

		?>

		<div>
			<strong>Generic template</strong>
			<ul>
			<li>
					<?php
						printf(
							'<label><input type="checkbox" name="bctheme_settings_option[include_file_template][generic][]" value="archive.php" %s>%s</label>',
							$this->check_template('archive.php')  ? 'checked' : '',
							'archive.php'
						);
					?>
				</li>
				<li>
					<?php
						printf(
							'<label><input type="checkbox" name="bctheme_settings_option[include_file_template][generic][]" value="single.php" %s>%s</label>',
							$this->check_template('single.php')  ? 'checked' : '',
							'single.php'
						);
					?>
				</li>
				<li>
					<?php
						printf(
							'<label><input type="checkbox" name="bctheme_settings_option[include_file_template][generic][]" value="404.php" %s>%s</label>',
							$this->check_template('404.php')  ? 'checked' : '',
							'404.php'
						);
					?>
				</li>
				<li>
					<?php
						printf(
							'<label><input type="checkbox" name="bctheme_settings_option[include_file_template][generic][]" value="search.php" %s>%s</label>',
							$this->check_template('search.php')  ? 'checked' : '',
							'search.php'
						);
					?>
				</li>
				<li>
				<?php
						printf(
							'<label><input type="checkbox" name="bctheme_settings_option[include_file_template][generic][]" value="taxonomy.php" %s>%s</label>',
							$this->check_template('taxonomy.php')  ? 'checked' : '',
							'taxonomy.php'
						);
					?>
				</li>
			</ul>
		</div>

		<?php
		$args_custom_post_types = array(
			'public' => true,
			'_builtin' => false
		);
		$custom_post_types = get_post_types( $args_custom_post_types, 'objects' );
		foreach ( $custom_post_types as $post_type_obj ):
			
			$labels = get_post_type_labels( $post_type_obj );
			/*echo '<label><input type="checkbox" name="bc_settings_cf[include_file_template][]" value="'.esc_attr( $post_type_obj->name ).'" ';
			echo ( isset( $v['typepost'] ) && in_array(esc_attr( $post_type_obj->name ), $v['typepost']) ) ? 'checked' : '';
			echo '> '.esc_html( $labels->name ).' </label>';*/
		?>

		<div>
			<strong><?php echo esc_html( $labels->name ); ?></strong>
			<ul>
				<li>
					<?php
						printf(
							'<label><input type="checkbox" name="bctheme_settings_option[include_file_template][cpt][]" value="%s" %s>%s</label>',
							'archive-'.esc_attr( $post_type_obj->name ).'.php',
							$this->check_template('archive-'.esc_attr( $post_type_obj->name ).'.php')  ? 'checked' : '',
							'archive-'.esc_attr( $post_type_obj->name ).'.php'
						);
					?>
				</li>
				<li>
					<?php
						printf(
							'<label><input type="checkbox" name="bctheme_settings_option[include_file_template][cpt][]" value="%s" %s>%s</label>',
							'single-'.esc_attr( $post_type_obj->name ).'.php',
							$this->check_template('single-'.esc_attr( $post_type_obj->name ).'.php')  ? 'checked' : '',
							'single-'.esc_attr( $post_type_obj->name ).'.php'
						);
					?>
				</li>
			</ul>
		</div>

		<?php

		endforeach;
			$args = array(
				'public'   => true,
				'_builtin' => false
				
			  ); 
		foreach ( get_taxonomies($args,'objects') as $taxonomy ):
			?>
		<div>
			<strong><?php echo esc_html( $taxonomy->label ); ?></strong>
			<ul>
				<li>
					<?php
						printf(
							'<label><input type="checkbox" name="bctheme_settings_option[include_file_template][cpt][]" value="%s" %s>%s</label>',
							'taxonomy-'.esc_attr( $taxonomy->name ).'.php',
							$this->check_template('taxonomy-'.esc_attr( $taxonomy->name ).'.php')  ? 'checked' : '',
							'taxonomy-'.esc_attr( $taxonomy->name ).'.php'
						);
					?>
				</li>
				<?php
				$taxonomies = get_terms( array(
					'taxonomy' => $taxonomy->name,
					'hide_empty' => false
				) );
				foreach( $taxonomies as $category ) {
					?>
					<li>&nbsp&nbsp&nbsp&nbsp&nbsp
						<?php
							printf(
								'<label><input type="checkbox" name="bctheme_settings_option[include_file_template][cpt][]" value="%s" %s>%s</label>',
								'taxonomy-'.$taxonomy->name.'-'.esc_attr( $category->slug ).'.php',
								$this->check_template('taxonomy-'.$taxonomy->name.'-'.esc_attr( $category->slug ).'.php')  ? 'checked' : '',
								'taxonomy-'.$taxonomy->name.'-'.esc_attr( $category->slug ).'.php'
							);
						?>
					</li>
					<?php
				}
				?>
				
				
			</ul>
		</div>

		<?php
		endforeach;



	}

	
	public function gen_html_callback(){
		?>
		<button value="true" name="gen_html" class="button button-primary">Genera html da queste impostazioni</button>
		<br>
		<br>
		<strong>Lista dimensioni immagini:</strong><br>
		<?php
		
		$s = wp_get_registered_image_subsizes();
		echo '<ul>';
		foreach ($s as $key => $image_size) {
			echo "<li>{$key} ({$image_size['width']} x {$image_size['height']})</li>";
		}
		echo '</ul>';
	}
	
	public function check_template($file){
		$folder_theme = WP_CONTENT_DIR  . '/themes/' . get_option( 'stylesheet');
		return file_exists($folder_theme.'/'.$file);
	}

    public function copyfolder ($from, $to, $ext="*") {
        // (A1) SOURCE FOLDER CHECK
        if (!is_dir($from)) { exit("$from does not exist"); }
       
        // (A2) CREATE DESTINATION FOLDER
        if (!is_dir($to)) {
            if (!mkdir($to)) { 
                exit("Failed to create $to");
            };
          //echo "$to created\r\n";
        }
       
        $dir = opendir($from);
        @mkdir($to);
        while(( $file = readdir($dir)) ) {
            if (( $file != '.' ) && ( $file != '..' )) {
                if ( is_dir($from . '/' . $file) ) {
                    $this->copyfolder($from .'/'. $file, $to .'/'. $file);
                }
                else {
                    copy($from .'/'. $file,$to .'/'. $file);
                }
            }
        }
        closedir($dir);
        return true;
    }

    public function deleteAll($dir) {
        if (is_dir($dir)) {
            $objects = scandir($dir);
            foreach ($objects as $object) {
              if ($object != "." && $object != "..") {
                if (filetype($dir."/".$object) == "dir") 
                $this->deleteAll($dir."/".$object); 
                else unlink   ($dir."/".$object);
              }
            }
            reset($objects);
            rmdir($dir);
        }
    }

	public function copyfile($from, $to){
		return copy($from,$to);
	}
	public function deletefile($file){
		return unlink($file);
	}

	public function admin_js_theme($hook){
		?>
		<script>
			jQuery(document).ready(function($) {
								
				$(".bc-theme-bar-item").click(function(e){ 
					e.preventDefault(); 
					var i;
					var x = $('.bar_cont');
					for (i = 0; i < x.length; i++) {
						x[i].style.display = "none";
					}
					var div = $(this).attr('attr_theme_bar');
					$(div).show();
					$('.bc-theme-bar-item').css('background-color','#eee');
					$(this).css('background-color','#fff');
					
					
				});

				
			})
		</script>
		<?php
	}
	

	function _limit_depth( $hook ) {
		if ( $hook != 'nav-menus.php' ) return;
		wp_add_inline_script( 'nav-menu', 'wpNavMenu.options.globalMaxDepth = 2;', 'after' );
	}

}
$bctheme_settings = new BcThemeSettings();
if ( is_admin() ){
	$bctheme_settings->init_admin();
}

/* 
 * Retrieve this value with:
 * $bctheme_settings_options = get_option( 'bctheme_settings_option' ); // Array of All Options
 * $nome = $bctheme_settings_options['nome']; // Nome
 * $include_file_woocommerce = $bctheme_settings_options['include_file_woocommerce']; // Include file woocommerce
 * $include_file_template = $bctheme_settings_options['include_file_template']; // Include file template
 */
